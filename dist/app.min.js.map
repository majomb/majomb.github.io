{"version":3,"sources":["app.module.js","app.controller.js","model/task.model.js","model/tasks.model.js","services/localStorage.service.js","services/task.service.js","task-list/task-list.directive.js","task-list/task-list-item/task-list-item.directive.js"],"names":["angular","appConfigure","appRun","module","config","run","$inject","AppController","$scope","$interval","Tasks","taskService","activate","vm","tasks","getTasks","then","stopInterval","storeTasks","saveTasks","this","$on","cancel","controller","_","TaskModelFactory","Task","data","description","isDone","prototype","isValid","self","factory","TasksModelFactory","items","forEach","task","push","unshift","remove","index","indexOf","removeAt","splice","countRemaining","filter","length","JSON","localStorageFactory","$window","isSupported","storage","getItem","key","parse","setItem","obj","stringify","result","uid","Date","localStorage","removeItem","exception","taskServiceFactory","$q","when","taskList","TaskListController","addNewTask","removeTask","directive","restrict","templateUrl","scope","controllerAs","bindToController","taskListItem","TaskListItemController","isUndefined","editable","primaryAction","forceEditMode","onPrimaryAction","edit","onRemove","primaryActionTitle"],"mappings":"CAAA,SAAAA,GACA,YASA,SAAAC,MAIA,QAAAC,MAXAF,EACAG,OAAA,OAAA,cACAC,OAAAH,GACAI,IAAAH,GAEAD,EAAAK,YAUAN,SClBA,SAAAA,GACA,YAQA,SAAAO,GAAAC,EAAAC,EAAAC,EAAAC,GAMA,QAAAC,KACAC,EAAAC,MAAA,GAAAJ,GAEAC,EAAAI,WAAAC,KAAA,SAAAF,GACAD,EAAAC,MAAAA,IAGAG,EAAAR,EAAAS,EAAA,KAGA,QAAAA,KACAP,EAAAQ,UAAAN,EAAAC,OAhBA,GACAG,GADAJ,EAAAO,IAGAR,KAgBAJ,EAAAa,IAAA,WAAA,WACAZ,EAAAa,OAAAL,KA3BAjB,EACAG,OAAA,OACAoB,WAAA,gBAAAhB,GAEAA,EAAAD,SAAA,SAAA,YAAA,QAAA,gBA2BAN,SClCA,SAAAA,EAAAwB,GACA,YAMA,SAAAC,KACA,QAAAC,GAAAC,GACAA,EAAAA,MAEAP,KAAAQ,YAAAD,EAAAC,YACAR,KAAAS,OAAAF,EAAAE,OAQA,MALAH,GAAAI,UAAAC,QAAA,WACA,GAAAC,GAAAZ,IACA,SAAAY,EAAAJ,aAGAF,EAjBA1B,EACAG,OAAA,OACA8B,QAAA,OAAAR,IAkBAzB,QAAAwB,GCvBA,SAAAxB,EAAAwB,GACA,YAQA,SAAAU,GAAAR,GACA,QAAAhB,GAAAiB,GACA,GAAAK,GAAAZ,IAEAO,GAAAA,MACAA,EAAAQ,MAAAR,EAAAQ,UAEAH,EAAAG,SAEAX,EAAAY,QAAAT,EAAAQ,MAAA,SAAAE,GACAL,EAAAG,MAAAG,KAAA,GAAAZ,GAAAW,MA6BA,MAzBA3B,GAAAoB,UAAAS,QAAA,SAAAF,GACA,GAAAL,GAAAZ,IACAY,GAAAG,MAAAI,QAAAF,IAGA3B,EAAAoB,UAAAU,OAAA,SAAAH,GACA,GAAAL,GAAAZ,KACAqB,EAAAT,EAAAG,MAAAO,QAAAL,EACA,MAAAI,GACAT,EAAAW,SAAAF,IAIA/B,EAAAoB,UAAAa,SAAA,SAAAF,GACA,GAAAT,GAAAZ,IACAY,GAAAG,MAAAS,OAAAH,EAAA,IAGA/B,EAAAoB,UAAAe,eAAA,WACA,GAAAb,GAAAZ,IACA,OAAAI,GAAAsB,OAAAd,EAAAG,MAAA,SAAAE,GACA,OAAAA,EAAAR,SACAkB,QAGArC,EA7CAV,EACAG,OAAA,OACA8B,QAAA,QAAAC,GAEAA,EAAA5B,SAAA,SA4CAN,QAAAwB,GCnDA,SAAAxB,EAAAgD,GACA,YAQA,SAAAC,GAAAC,EAAAxC,GAsBA,QAAAyC,KACA,QAAAC,EAGA,QAAAC,GAAAC,GACA,MAAAN,GAAAO,MAAAH,EAAAC,QAAAC,IAGA,QAAAE,GAAAF,EAAAG,GACAL,EAAAI,QAAAF,EAAAN,EAAAU,UAAAD,IA7BA,GAAAL,GAAA,WACA,GACAA,GACAO,EAFAC,EAAA,GAAAC,KAGA,KAIA,OAHAT,EAAAF,EAAAY,cAAAN,QAAAI,EAAAA,GACAD,EAAAP,EAAAC,QAAAO,IAAAA,EACAR,EAAAW,WAAAH,GACAD,GAAAP,EACA,MAAAY,QAGAF,GACAX,YAAAA,EACAE,QAAAA,EACAG,QAAAA,EAGA,OAAAM,GA1BA9D,EACAG,OAAA,OACA8B,QAAA,eAAAgB,GAEAA,EAAA3C,SAAA,UAAA,UAqCAN,QAAAgD,MC5CA,SAAAhD,GACA,YAQA,SAAAiE,GAAAC,EAAAJ,EAAApD,GAMA,QAAAK,KACA,GAAAD,GAAA,GAAAJ,EAMA,OAJAoD,GAAAX,gBACArC,EAAA,GAAAJ,GAAAoD,EAAAT,QAAA,WAGAa,EAAAC,KAAArD,GAGA,QAAAK,GAAAL,GACAgD,EAAAX,eACAW,EAAAN,QAAA,QAAA1C,GAjBA,GAAAH,IACAI,SAAAA,EACAI,UAAAA,EAmBA,OAAAR,GA5BAX,EACAG,OAAA,OACA8B,QAAA,cAAAgC,GAEAA,EAAA3D,SAAA,KAAA,eAAA,UA2BAN,SClCA,SAAAA,GACA,YAQA,SAAAoE,KAgBA,QAAAC,GAAA3C,GAMA,QAAA4C,GAAAjC,GACAxB,EAAAC,MAAAyB,QAAA,GAAAb,GAAAW,IACAA,EAAAT,YAAA,KAGA,QAAA2C,GAAAlC,GACAxB,EAAAC,MAAA0B,OAAAH,GAXA,GAAAxB,GAAAO,IAEAP,GAAAyD,WAAAA,EACAzD,EAAA0D,WAAAA,EAnBA,GAAAC,IACAC,SAAA,IACAC,YAAA,0CACAC,OACA7D,MAAA,MAEAS,WAAA8C,EACAO,aAAA,KACAC,kBAAA,EAKA,OAFAR,GAAA/D,SAAA,QAEAkE,EApBAxE,EACAG,OAAA,OACAqE,UAAA,WAAAJ,GAEAA,EAAA9D,YAmCAN,SC1CA,SAAAA,GACA,YAQA,SAAA8E,KAqBA,QAAAC,GAAArD,GASA,QAAAd,KACAC,EAAAwB,KAAAxB,EAAAwB,MAAA,GAAAX,GAEA1B,EAAAgF,YAAAnE,EAAAoE,YACApE,EAAAoE,UAAA,GAIA,QAAAC,KACArE,EAAAwB,KAAAN,YACAlB,EAAAsE,kBACAtE,EAAAoE,UAAA,GAEApE,EAAAuE,iBACA/C,KAAAxB,EAAAwB,QAKA,QAAAgD,KACAxE,EAAAoE,UAAA,EAGA,QAAAzC,KACA3B,EAAAyE,UACAjD,KAAAxB,EAAAwB,OAjCA,GAAAxB,GAAAO,IAEAP,GAAAqE,cAAAA,EACArE,EAAA2B,OAAAA,EACA3B,EAAAwE,KAAAA,EAEAzE,IA3BA,GAAA4D,IACAC,SAAA,IACAC,YAAA,8DACAC,OACAtC,KAAA,KACA4C,SAAA,KACAE,cAAA,IACAC,gBAAA,IACAE,SAAA,IACAC,mBAAA,KAEAhE,WAAAwD,EACAH,aAAA,KACAC,kBAAA,EAKA,OAFAE,GAAAzE,SAAA,QAEAkE,EAzBAxE,EACAG,OAAA,OACAqE,UAAA,eAAAM,GAEAA,EAAAxE,YA+DAN","file":"app.min.js","sourcesContent":["(function(angular) {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app', ['ngAnimate'])\r\n        .config(appConfigure)\r\n        .run(appRun);\r\n\r\n    appConfigure.$inject = [];\r\n\r\n    function appConfigure() {\r\n        // Any module configuration which must be configured before running the app goes here.\r\n    }\r\n\r\n    function appRun() {\r\n        // Any code that needs to be run before the app starts goes here.\r\n    }\r\n\r\n})(angular);\r\n","(function(angular) {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .controller('AppController', AppController);\r\n\r\n    AppController.$inject = ['$scope', '$interval', 'Tasks', 'taskService'];\r\n\r\n    function AppController($scope, $interval, Tasks, taskService) {\r\n        var vm = this;\r\n        var stopInterval;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            vm.tasks = new Tasks();\r\n\r\n            taskService.getTasks().then(function(tasks) {\r\n                vm.tasks = tasks;\r\n            });\r\n\r\n            stopInterval = $interval(storeTasks, 2000);\r\n        }\r\n\r\n        function storeTasks() {\r\n            taskService.saveTasks(vm.tasks);\r\n        }\r\n\r\n        $scope.$on('$destroy', function() {\r\n            $interval.cancel(stopInterval);\r\n        });\r\n    }\r\n\r\n})(angular);\r\n","(function(angular, _) {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .factory('Task', TaskModelFactory);\r\n\r\n    function TaskModelFactory() {\r\n        function Task(data) {\r\n            data = data || {};\r\n\r\n            this.description = data.description;\r\n            this.isDone = data.isDone;\r\n        }\r\n\r\n        Task.prototype.isValid = function() {\r\n            var self = this;\r\n            return !!self.description;\r\n        };\r\n\r\n        return Task;\r\n    }\r\n\r\n})(angular, _);\r\n","(function(angular, _) {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .factory('Tasks', TasksModelFactory);\r\n\r\n        TasksModelFactory.$inject = ['Task'];\r\n\r\n        function TasksModelFactory(Task) {\r\n            function Tasks(data) {\r\n                var self = this;\r\n\r\n                data = data || {};\r\n                data.items = data.items || [];\r\n\r\n                self.items = [];\r\n\r\n                _.forEach(data.items, function(task) {\r\n                    self.items.push(new Task(task));\r\n                });\r\n            }\r\n\r\n            Tasks.prototype.unshift = function(task) {\r\n                var self = this;\r\n                self.items.unshift(task);\r\n            };\r\n\r\n            Tasks.prototype.remove = function(task) {\r\n                var self = this;\r\n                var index = self.items.indexOf(task);\r\n                if (index !== -1) {\r\n                    self.removeAt(index);\r\n                }\r\n            };\r\n\r\n            Tasks.prototype.removeAt = function(index) {\r\n                var self = this;\r\n                self.items.splice(index, 1);\r\n            };\r\n\r\n            Tasks.prototype.countRemaining = function() {\r\n                var self = this;\r\n                return _.filter(self.items, function(task) {\r\n                    return !task.isDone;\r\n                }).length;\r\n            };\r\n\r\n            return Tasks;\r\n        }\r\n\r\n})(angular, _);\r\n","(function(angular, JSON) {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .factory('localStorage', localStorageFactory);\r\n\r\n    localStorageFactory.$inject = ['$window', 'Tasks'];\r\n\r\n    function localStorageFactory($window, Tasks) {\r\n        // https://mathiasbynens.be/notes/localstorage-pattern\r\n        var storage = (function() {\r\n            var uid = new Date();\r\n            var storage;\r\n            var result;\r\n            try {\r\n                (storage = $window.localStorage).setItem(uid, uid);\r\n                result = storage.getItem(uid) == uid;\r\n                storage.removeItem(uid);\r\n                return result && storage;\r\n            } catch (exception) {}\r\n        }());\r\n\r\n        var localStorage = {\r\n            isSupported: isSupported,\r\n            getItem: getItem,\r\n            setItem: setItem\r\n        };\r\n\r\n        return localStorage;\r\n\r\n        function isSupported() {\r\n            return !!storage;\r\n        }\r\n\r\n        function getItem(key) {\r\n            return JSON.parse(storage.getItem(key));\r\n        }\r\n\r\n        function setItem(key, obj) {\r\n            storage.setItem(key, JSON.stringify(obj));\r\n        }\r\n    }\r\n\r\n})(angular, JSON);\r\n","(function(angular) {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .factory('taskService', taskServiceFactory);\r\n\r\n    taskServiceFactory.$inject = ['$q', 'localStorage', 'Tasks'];\r\n\r\n    function taskServiceFactory($q, localStorage, Tasks) {\r\n        var taskService = {\r\n            getTasks: getTasks,\r\n            saveTasks: saveTasks\r\n        };\r\n\r\n        function getTasks() {\r\n            var tasks = new Tasks();\r\n\r\n            if (localStorage.isSupported()) {\r\n                tasks = new Tasks(localStorage.getItem('tasks'));\r\n            }\r\n\r\n            return $q.when(tasks);\r\n        }\r\n\r\n        function saveTasks(tasks) {\r\n            if (localStorage.isSupported()) {\r\n                localStorage.setItem('tasks', tasks);\r\n            }\r\n        }\r\n\r\n        return taskService;\r\n    }\r\n\r\n})(angular);\r\n","(function(angular) {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .directive('taskList', taskList);\r\n\r\n    taskList.$inject = [];\r\n\r\n    function taskList() {\r\n        var directive = {\r\n            restrict: 'E',\r\n            templateUrl: '/app/task-list/task-list.directive.html',\r\n            scope: {\r\n                tasks: '=?'\r\n            },\r\n            controller: TaskListController,\r\n            controllerAs: 'vm',\r\n            bindToController: true\r\n        };\r\n\r\n        TaskListController.$inject = ['Task'];\r\n\r\n        return directive;\r\n\r\n        function TaskListController(Task) {\r\n            var vm = this;\r\n\r\n            vm.addNewTask = addNewTask;\r\n            vm.removeTask = removeTask;\r\n\r\n            function addNewTask(task) {\r\n                vm.tasks.unshift(new Task(task));\r\n                task.description = null;\r\n            }\r\n\r\n            function removeTask(task) {\r\n                vm.tasks.remove(task);\r\n            }\r\n        }\r\n    }\r\n\r\n})(angular);\r\n","(function(angular) {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .directive('taskListItem', taskListItem);\r\n\r\n    taskListItem.$inject = [];\r\n\r\n    function taskListItem() {\r\n        var directive = {\r\n            restrict: 'E',\r\n            templateUrl: '/app/task-list/task-list-item/task-list-item.directive.html',\r\n            scope: {\r\n                task: '=?',\r\n                editable: '=?',\r\n                forceEditMode: '&',\r\n                onPrimaryAction: '&',\r\n                onRemove: '&',\r\n                primaryActionTitle: '@'\r\n            },\r\n            controller: TaskListItemController,\r\n            controllerAs: 'vm',\r\n            bindToController: true\r\n        };\r\n\r\n        TaskListItemController.$inject = ['Task'];\r\n\r\n        return directive;\r\n\r\n        function TaskListItemController(Task) {\r\n            var vm = this;\r\n\r\n            vm.primaryAction = primaryAction;\r\n            vm.remove = remove;\r\n            vm.edit = edit;\r\n\r\n            activate();\r\n\r\n            function activate() {\r\n                vm.task = vm.task || new Task();\r\n\r\n                if (angular.isUndefined(vm.editable)) {\r\n                    vm.editable = false;\r\n                }\r\n            }\r\n\r\n            function primaryAction() {\r\n                if (vm.task.isValid()) {\r\n                    if (!vm.forceEditMode()) {\r\n                        vm.editable = false;\r\n                    }\r\n                    vm.onPrimaryAction({\r\n                        task: vm.task\r\n                    });\r\n                }\r\n            }\r\n\r\n            function edit() {\r\n                vm.editable = true;\r\n            }\r\n\r\n            function remove() {\r\n                vm.onRemove({\r\n                    task: vm.task\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n})(angular);\r\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["index.js"],"names":["console","clear","ASTEROID_MIN_SPEED","ASTEROID_MAX_SPEED","ASTEROID_MIN_HEALTH","ASTEROID_MAX_HEALTH","ASTEROID_MIN_SIZE","ASTEROID_MAX_SIZE","ASTEROID_MIN_POINTS","ASTEROID_MAX_POINTS","asteroidBg","bgPadding","bgWidth","bgHeight","thrustImg","spaceShip","rotatePoint","point","origin","angle","delta","p5","Vector","sub","r","mag","tangle","atan2","y","x","cos","sin","createVector","asteroidShape","radiuses","xOffset","yOffset","highlight","strokeWeight","tint","push","translate","texture","beginShape","TWO_PI","length","i","a","sx","sy","vertex","endShape","CLOSE","pop","noTint","Asteroid","location","velocity","speed","add","aVelocity","map","isVisible","isOut","health","Math","round","random","size","npoints","offset","Array","from","bgXOffset","bgYOffset","wasHit","updateOut","updateVisibility","rotate","XOffset","width","height","half","value","sides","Asteroids","asteroids","Set","target","frameCount","xmin","xmax","ymin","ymax","side","normalize","mult","forEach","update","isDead","delete","draw","ship","score","hit","Projectile","direction","life","copy","prevLocation","dir","setMag","stroke","color","line","Projectiles","projectiles","p","asteroid","nailedProjectiles","filter","contains","hitCount","ImpactProjectile","lifeSpan","lifeStep","scale","max","c","setAlpha","blendMode","SCREEN","fill","circle","BLEND","ImpactProjectiles","Ship","radians","acceleration","angleAcceleration","impactProjectiles","maxVelocity","constrain","force","SPACE","keyIsDown","rightCannon","leftCannon","x1","y1","x2","y2","x3","y3","v1","v2","v3","ambientLight","directionalLight","rotateZ","rotateX","model","applyForce","gameScore","$gameScore","preload","loadImage","loadModel","setup","document","querySelector","remove","canvas","createCanvas","windowWidth","windowHeight","WEBGL","parent","getElementById","windowResized","resizeCanvas","LEFT_ARROW","left","RIGHT_ARROW","right","UP_ARROW","forward","DOWN_ARROW","backward","hitBy","drawScore","bounds","shoot","sScore","toString","padStart","innerText"],"mappings":"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","file":"asteroids.e31bb0bc.js","sourceRoot":"..","sourcesContent":["console.clear();\n\nconst ASTEROID_MIN_SPEED = 0.1;\nconst ASTEROID_MAX_SPEED = 3.5;\nconst ASTEROID_MIN_HEALTH = 1;\nconst ASTEROID_MAX_HEALTH = 10;\nconst ASTEROID_MIN_SIZE = 30;\nconst ASTEROID_MAX_SIZE = 60;\nconst ASTEROID_MIN_POINTS = 7;\nconst ASTEROID_MAX_POINTS = 15;\n\nlet asteroidBg;\nlet bgPadding = ASTEROID_MAX_SIZE * 3;\nlet bgWidth = 1920 - bgPadding;\nlet bgHeight = 1080 - bgPadding;\nlet thrustImg = null;\nlet spaceShip;\n\nfunction rotatePoint(point, origin, angle) {\n  const delta = p5.Vector.sub(origin, point);\n  // distance from triangle center to vertex\n  let r = delta.mag();\n\n  // angle between triangle center and vertex\n  const tangle = atan2(point.y - origin.y, point.x - origin.x);\n\n  // rotates point around origin by angle (incremented each frame)\n  // alse make sure that it starts from original angle between vertex and center\n  let x = origin.x + cos(angle + tangle) * r;\n  let y = origin.y + sin(angle + tangle) * r;\n\n  return createVector(x, y);\n}\n\nfunction asteroidShape(\n  x,\n  y,\n  radiuses,\n  xOffset = 0,\n  yOffset = 0,\n  highlight = false\n) {\n  strokeWeight(0);\n  if (highlight) {\n    tint(255, 127);\n  }\n  push();\n  translate(x, y, -10);\n  texture(asteroidBg);\n  beginShape();\n  let angle = TWO_PI / (radiuses.length - 1);\n  let i = 0;\n  for (let a = 0; a < TWO_PI; a += angle) {\n    let sx = cos(a) * radiuses[i];\n    let sy = sin(a) * radiuses[i];\n    vertex(sx, sy, sx + radiuses[i] + xOffset, sy + radiuses[i] + yOffset);\n    i++;\n  }\n  endShape(CLOSE);\n  pop();\n  noTint();\n}\n\nclass Asteroid {\n  constructor(location, velocity) {\n    this.location = location;\n    this.velocity = velocity;\n    this.angle = 0;\n    const speed = p5.Vector.sub(\n      location,\n      p5.Vector.add(location, velocity)\n    ).mag();\n    // static asteroids\n    this.aVelocity = speed\n      ? map(speed, ASTEROID_MIN_SPEED, ASTEROID_MAX_SPEED, 0.01, 0.1)\n      : 0;\n    this.isVisible = false;\n    this.isOut = false;\n    this.health = Math.round(random(ASTEROID_MIN_HEALTH, ASTEROID_MAX_HEALTH));\n    this.size = map(\n      this.health,\n      ASTEROID_MIN_HEALTH,\n      ASTEROID_MAX_HEALTH,\n      ASTEROID_MIN_SIZE,\n      ASTEROID_MAX_SIZE\n    );\n    this.npoints = Math.round(random(ASTEROID_MIN_POINTS, ASTEROID_MAX_POINTS));\n    const offset = this.size * 0.45;\n    this.radiuses = Array.from({ length: this.npoints + 1 }).map(() =>\n      random(this.size - offset, this.size)\n    );\n    this.bgXOffset = random(0, bgWidth);\n    this.bgYOffset = random(0, bgHeight);\n    this.wasHit = false;\n  }\n\n  update() {\n    this.wasHit = false;\n    this.angle += this.aVelocity;\n    this.location.add(this.velocity);\n    this.updateOut();\n    this.updateVisibility();\n  }\n\n  draw() {\n    push();\n    translate(this.location.x, this.location.y);\n    rotate(this.angle);\n    asteroidShape(\n      0,\n      0,\n      this.radiuses,\n      this.XOffset,\n      this.bgYOffset,\n      this.wasHit\n    );\n    pop();\n  }\n\n  updateVisibility() {\n    if (\n      this.location.x > 0 &&\n      this.location.x < width &&\n      this.location.y > 0 &&\n      this.location.y < height\n    ) {\n      this.isVisible = true;\n    }\n  }\n\n  updateOut() {\n    if (!this.isVisible) {\n      return;\n    }\n    if (\n      this.location.x < 0 ||\n      this.location.x > width ||\n      this.location.y < 0 ||\n      this.location.y > height\n    ) {\n      this.isOut = true;\n    }\n  }\n\n  isDead() {\n    return this.health <= 0;\n  }\n\n  contains(point) {\n    const half = this.size / 2;\n    if (\n      this.location.x - half <= point.x &&\n      point.x <= this.location.x + half &&\n      this.location.y - half <= point.y &&\n      point.y <= this.location.y + half\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  hit(value) {\n    this.health -= value;\n    this.wasHit = true;\n  }\n}\n\nconst sides = ['L', 'R', 'T', 'B'];\n\nclass Asteroids {\n  constructor() {\n    this.asteroids = new Set();\n  }\n\n  add(target) {\n    if (frameCount % 10 !== 0) {\n      return;\n    }\n\n    const value = random();\n    if (value > 0.1) {\n      return;\n    }\n\n    const xOffset = width * 0.2;\n    const yOffset = height * 0.2;\n\n    let xmin;\n    let xmax;\n    let ymin;\n    let ymax;\n\n    const side = random(sides);\n\n    if (side === 'T') {\n      xmin = -xOffset;\n      xmax = width + xOffset;\n      ymin = 0;\n      ymax = -yOffset;\n    }\n    if (side === 'R') {\n      xmin = width;\n      xmax = width + xOffset;\n      ymin = -yOffset;\n      ymax = height + yOffset;\n    }\n    if (side === 'B') {\n      xmin = -xOffset;\n      xmax = width + xOffset;\n      ymin = height;\n      ymax = height + yOffset;\n    }\n    if (side === 'L') {\n      xmin = -xOffset;\n      xmax = 0;\n      ymin = -yOffset;\n      ymax = height + yOffset;\n    }\n\n    const x = random(xmin, xmax);\n    const y = random(ymin, ymax);\n    const location = createVector(x, y);\n    const velocity = p5.Vector.sub(target, location);\n    velocity.normalize();\n    velocity.mult(random(ASTEROID_MIN_SPEED, ASTEROID_MAX_SPEED));\n    this.asteroids.add(new Asteroid(location, velocity));\n  }\n\n  update() {\n    this.asteroids.forEach((a) => {\n      a.update();\n      if (a.isOut || a.isDead()) {\n        this.asteroids.delete(a);\n      }\n    });\n  }\n\n  draw() {\n    this.asteroids.forEach((a) => {\n      a.draw();\n    });\n  }\n\n  hitBy(ship) {\n    let score = 0;\n    this.asteroids.forEach((a) => {\n      score += ship.hit(a);\n    });\n    return score;\n  }\n}\n\nclass Projectile {\n  constructor(location, direction) {\n    this.life = 255;\n    this.location = location.copy();\n    this.prevLocation = this.location.copy();\n    this.direction = direction;\n    this.angle = 0;\n    this.size = 5;\n  }\n  update() {\n    const dir = this.direction.copy();\n    dir.setMag(15);\n    dir.mult(-1);\n    this.prevLocation = this.location.copy();\n    this.location.add(dir);\n    this.life -= 1;\n  }\n  isDead() {\n    return (\n      this.location.x < 0 ||\n      this.location.x > width ||\n      this.location.y < 0 ||\n      this.location.y > height\n    );\n  }\n  draw() {\n    stroke(color('#E6F7D2'));\n    strokeWeight(3);\n    line(\n      this.prevLocation.x,\n      this.prevLocation.y,\n      this.location.x,\n      this.location.y\n    );\n  }\n}\n\nclass Projectiles {\n  constructor() {\n    this.projectiles = new Set();\n  }\n\n  add(location, direction) {\n    this.projectiles.add(new Projectile(location, direction));\n  }\n\n  update() {\n    this.projectiles.forEach((p) => {\n      p.update();\n      if (p.isDead()) {\n        this.projectiles.delete(p);\n      }\n    });\n  }\n\n  draw() {\n    this.projectiles.forEach((p) => {\n      p.draw();\n    });\n  }\n\n  hit(asteroid) {\n    const nailedProjectiles = Array.from(this.projectiles).filter((p) =>\n      asteroid.contains(p.location)\n    );\n    const hitCount = nailedProjectiles.length;\n    if (hitCount > 0) {\n      asteroid.hit(hitCount);\n    }\n    nailedProjectiles.forEach((p) => {\n      this.projectiles.delete(p);\n    });\n    return nailedProjectiles;\n  }\n}\n\nclass ImpactProjectile {\n  constructor(location) {\n    this.lifeSpan = 60 * 1;\n    this.life = this.lifeSpan;\n    this.lifeStep = 255 / this.life;\n    const offset = 20;\n    this.location = p5.Vector.add(\n      location,\n      createVector(random(-offset, offset), random(-offset, offset))\n    );\n    this.size = random(2, 10);\n  }\n  update() {\n    this.life -= this.lifeStep;\n  }\n  isDead() {\n    return this.life <= 0;\n  }\n  draw() {\n    push();\n    translate(this.location.x, this.location.y, 5);\n    scale(max(1, this.life) / max(1, this.lifeSpan));\n    const c = color('#F4F590');\n    c.setAlpha(this.life);\n    blendMode(SCREEN);\n    fill(c);\n    stroke(c);\n    circle(0, 0, this.size);\n    blendMode(BLEND);\n    pop();\n  }\n}\n\nclass ImpactProjectiles {\n  constructor() {\n    this.projectiles = new Set();\n  }\n\n  add(location) {\n    for (let i = 0; i <= 3; i++) {\n      this.projectiles.add(new ImpactProjectile(location));\n    }\n  }\n\n  update() {\n    this.projectiles.forEach((p) => {\n      p.update();\n      if (p.isDead()) {\n        this.projectiles.delete(p);\n      }\n    });\n  }\n\n  draw() {\n    this.projectiles.forEach((p) => {\n      p.draw();\n    });\n  }\n}\n\nclass Ship {\n  constructor() {\n    this.angle = radians(0);\n    this.location = createVector(width / 2, height / 2);\n    this.velocity = createVector(0, 0);\n    this.acceleration = createVector(0, 0);\n    this.direction = createVector(0, 0);\n    this.origin = createVector(0, 0);\n    this.angleAcceleration = 0.1;\n    this.projectiles = new Projectiles();\n    this.impactProjectiles = new ImpactProjectiles();\n    this.size = 25;\n    this.half = this.size / 2;\n  }\n  update() {\n    this.velocity.add(this.acceleration);\n    const maxVelocity = 3;\n    this.velocity.x = constrain(this.velocity.x, -maxVelocity, maxVelocity);\n    this.velocity.y = constrain(this.velocity.y, -maxVelocity, maxVelocity);\n    this.location.add(this.velocity);\n    this.acceleration.mult(0);\n    this.projectiles.update();\n    this.impactProjectiles.update();\n  }\n  applyForce(force) {\n    this.acceleration.add(force);\n  }\n  shoot() {\n    const SPACE = 32;\n    if (keyIsDown(SPACE) && frameCount % 4 == 0) {\n      let rightCannon = createVector(this.origin.x + 28, this.origin.y - 10);\n      rightCannon = rotatePoint(rightCannon, this.origin, this.angle);\n\n      let leftCannon = createVector(this.origin.x - 28, this.origin.y - 10);\n      leftCannon = rotatePoint(leftCannon, this.origin, this.angle);\n\n      this.projectiles.add(leftCannon, this.direction);\n      this.projectiles.add(rightCannon, this.direction);\n    }\n  }\n  draw() {\n    const size = this.size;\n    const half = this.half;\n    stroke(0);\n    strokeWeight(1);\n\n    let x1 = this.location.x - half;\n    let y1 = this.location.y;\n    let x2 = this.location.x;\n    let y2 = this.location.y - size;\n    let x3 = this.location.x + half;\n    let y3 = this.location.y;\n    this.origin = createVector(this.location.x, this.location.y - size / 2.5);\n    let v1 = createVector(x1, y1);\n    v1 = rotatePoint(v1, this.origin, this.angle);\n    let v2 = createVector(x2, y2);\n    v2 = rotatePoint(v2, this.origin, this.angle);\n    let v3 = createVector(x3, y3);\n    v3 = rotatePoint(v3, this.origin, this.angle);\n\n    this.direction = p5.Vector.sub(this.origin, v2).normalize();\n\n    push();\n\n    stroke(color('#6D4717'));\n    fill('#FFEFC0');\n    strokeWeight(0.5);\n    ambientLight(150);\n    directionalLight(255, 255, 255, 400, 200, 0);\n    translate(this.origin.x, this.origin.y, 7);\n    scale(0.3);\n    rotateZ(this.angle);\n    rotateX(radians(90));\n    model(spaceShip);\n    pop();\n\n    /*\n    blendMode(SCREEN);\n    for(let i=0; i<10; i++) {\n      push();\n\n      translate(this.origin.x + random(-2, 2), this.origin.y + i + random(-2, 2));\n      rotateZ(this.angle);\n      translate(0, 45);\n      scale(1/15);\n      strokeWeight(0);\n      rotate(radians(-90));\n      fill(0,0,0,0);\n      texture(thrustImg);\n      plane(thrustImg.width, thrustImg.height);\n      pop();\n    }\n    blendMode(BLEND);\n    */\n\n    this.projectiles.draw();\n    this.impactProjectiles.draw();\n  }\n  left() {\n    this.angle -= this.angleAcceleration;\n  }\n  right() {\n    this.angle += this.angleAcceleration;\n  }\n  forward() {\n    const force = createVector(-0.05, -0.05);\n    force.mult(this.direction);\n    this.applyForce(force);\n  }\n  backward() {\n    const force = createVector(0.05, 0.05);\n    force.mult(this.direction);\n    this.applyForce(force);\n  }\n  bounds() {\n    if (this.location.x < 0) {\n      this.location.x = width;\n    } else if (this.location.x > width) {\n      this.location.x = 0;\n    }\n    if (this.location.y < 0) {\n      this.location.y = height;\n    } else if (this.location.y > height) {\n      this.location.y = 0;\n    }\n  }\n  hit(asteroid) {\n    const projectiles = this.projectiles.hit(asteroid);\n    projectiles.forEach((p) => {\n      this.impactProjectiles.add(p.location);\n    });\n    return projectiles.length;\n  }\n}\n\nlet ship;\nlet asteroids;\nlet gameScore;\nlet $gameScore = null;\n\nfunction preload() {\n  asteroidBg = loadImage(\n    'https://res.cloudinary.com/dzadmlxnt/image/upload/v1606642498/asteroids/asteroids-bg_p4dfyc-optimized_oidd13.jpg'\n  );\n  // https://free3d.com/3d-model/low-poly-spaceship-37605.html\n  spaceShip = loadModel(\n    'https://res.cloudinary.com/dzadmlxnt/raw/upload/v1605625376/asteroids/SpaceShip_x7aymb.obj',\n    true\n  );\n}\n\nfunction setup() {\n  document.querySelector('.loader').remove();\n  const canvas = createCanvas(windowWidth, windowHeight, WEBGL);\n  canvas.parent('game-container');\n  ship = new Ship();\n  asteroids = new Asteroids();\n  gameScore = 0;\n  $gameScore = document.getElementById('score');\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n\nfunction draw() {\n  translate(-width / 2, -height / 2, 0);\n  clear();\n  if (keyIsDown(LEFT_ARROW)) {\n    ship.left();\n  }\n  if (keyIsDown(RIGHT_ARROW)) {\n    ship.right();\n  }\n  if (keyIsDown(UP_ARROW)) {\n    ship.forward();\n  }\n  if (keyIsDown(DOWN_ARROW)) {\n    ship.backward();\n  }\n\n  asteroids.update();\n  asteroids.add(ship.location);\n  gameScore += asteroids.hitBy(ship);\n  asteroids.draw();\n  drawScore();\n\n  ship.update();\n  ship.bounds();\n  ship.shoot();\n  ship.draw();\n}\n\nfunction drawScore() {\n  const sScore = gameScore.toString().padStart('4', '0');\n  $gameScore.innerText = sScore;\n}\n"]}
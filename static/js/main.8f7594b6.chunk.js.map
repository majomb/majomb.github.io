{"version":3,"sources":["components/Label.js","components/Button.js","components/Sidebar.js","components/Loader.js","hooks/useData.js","hooks/useCsv.js","hooks/useDataSourceOptions.js","hooks/useCampaignOptions.js","hooks/useFilteredData.js","hooks/useChartDimensions.js","components/D3Chart.js","components/Chart.js","App.js","serviceWorker.js","index.js"],"names":["Label","children","rest","className","Button","Sidebar","dataSourceOptions","campaignOptions","model","onApply","useState","dataSources","campaigns","state","setState","handleOnChange","useCallback","options","name","map","o","value","placeholder","isMulti","filterOption","createFilter","ignoreAccents","onChange","onClick","Loader","parseTime","timeParse","useData","url","d","data","setData","error","setError","isLoading","setIsLoading","useEffect","a","async","csv","res","fetchCsv","useCsv","Date","Clicks","parseInt","Impressions","useDataSourceOptions","useMemo","uniqBy","Datasource","label","useCampaignOptions","Campaign","useFilteredData","filter","validDataSource","length","includes","validCampaign","combineChartDimensions","dimensions","parsedDimensions","marginTop","marginRight","marginBottom","marginLeft","boundedHeight","Math","max","height","boundedWidth","width","defaultSettings","D3Chart","element","this","initAccessors","initScales","initGenerators","initGroups","yAccessorClicks","yAccessorImpressions","xAccessor","yScaleClicks","d3","yScaleImpressions","xScale","lineGeneratorClicks","defined","isNaN","x","y","lineGeneratorImpressions","pathData","title","lineGenerator","color","yAxisGeneratorClicks","scale","yAxisGeneratorImpressions","xAxisGenerator","svg","append","bounds","yAxisGroupClicks","yAxisGroupImpressions","xAxisGroup","chartGroup","legendGroup","updateBounds","updateScales","updateAxis","updateLegends","updatePaths","attr","style","domain","range","nice","transition","call","legends","selectAll","exit","remove","i","enter","text","path","Chart","d3ChartRef","useRef","passedSettings","ref","changeWidth","changeHeight","current","resizeObserver","ResizeObserver","entries","Array","isArray","entry","contentRect","observe","unobserve","newSettings","useChartDimensions","update","App","filteredValues","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f7594b6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Label = ({ children, ...rest }) => (\n  <label className=\"label\" {...rest}>\n    {children}\n  </label>\n);\n\nLabel.propTypes = {\n  children: PropTypes.node.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.scss';\n\nexport const Button = ({ children, ...rest }) => (\n  <button className=\"btn\" {...rest}>\n    {children}\n  </button>\n);\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired\n};\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Select, { createFilter } from 'react-select';\nimport { Label } from './Label';\nimport { Button } from './Button';\nimport './Sidebar.scss';\n\nexport const Sidebar = ({\n  dataSourceOptions,\n  campaignOptions,\n  model,\n  onApply\n}) => {\n  const [state, setState] = useState({\n    dataSources: [],\n    campaigns: []\n  });\n\n  const handleOnChange = useCallback(\n    (options, { name }) => {\n      setState({ ...model, [name]: (options || []).map(o => o.value) });\n    },\n    [model]\n  );\n\n  const handleOnApply = () => {\n    onApply(state);\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <h2>Filter dimension values</h2>\n      <Label>\n        Data Source\n        <Select\n          className=\"select\"\n          name=\"dataSources\"\n          placeholder=\"All\"\n          options={dataSourceOptions}\n          isMulti={true}\n          filterOption={createFilter({ ignoreAccents: false })}\n          onChange={handleOnChange}\n        />\n      </Label>\n      <Label>\n        Campaign\n        <Select\n          className=\"select\"\n          name=\"campaigns\"\n          placeholder=\"All\"\n          options={campaignOptions}\n          isMulti={true}\n          filterOption={createFilter({ ignoreAccents: false })}\n          onChange={handleOnChange}\n        />\n      </Label>\n      <Button onClick={handleOnApply}>Apply</Button>\n    </div>\n  );\n};\n\nconst OptionShape = PropTypes.shape({\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n});\n\nconst Options = PropTypes.arrayOf(OptionShape);\n\nSidebar.propTypes = {\n  dataSourceOptions: Options.isRequired,\n  campaignOptions: Options.isRequired,\n  onApply: PropTypes.func.isRequired,\n  model: PropTypes.shape({\n    dataSources: PropTypes.array.isRequired,\n    campaigns: PropTypes.array.isRequired\n  })\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => <div className=\"lds-dual-ring\"></div>;\n","import { useCallback } from 'react';\nimport { timeParse } from 'd3-time-format';\nimport { useCsv } from './useCsv';\n\nconst parseTime = timeParse('%d.%m.%Y');\n\nexport const useData = () => {\n  const mapDate = useCallback(d => {\n    d.Date = parseTime(d.Date);\n    d.Clicks = parseInt(d.Clicks, 10);\n    d.Impressions = parseInt(d.Impressions, 10);\n    return d;\n  }, []);\n  return useCsv(\n    'http://adverity-challenge.s3-website-eu-west-1.amazonaws.com/DAMKBAoDBwoDBAkOBAYFCw.csv',\n    mapDate\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { csv } from 'd3-fetch/src/dsv';\n\nexport const useCsv = (url, map = d => d) => {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchCsv = async () => {\n      try {\n        setIsLoading(true);\n        const res = await csv(url, map);\n        setData(res);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCsv();\n  }, [url, map]);\n\n  return { data, error, isLoading };\n};\n","import { useMemo } from 'react';\nimport uniqBy from 'lodash/uniqBy';\n\nexport const useDataSourceOptions = data =>\n  useMemo(() => {\n    return uniqBy(data, d => d.Datasource).map(d => ({\n      value: d.Datasource,\n      label: d.Datasource\n    }));\n  }, [data]);\n","import { useMemo } from 'react';\nimport uniqBy from 'lodash/uniqBy';\n\nexport const useCampaignOptions = data =>\n  useMemo(() => {\n    return uniqBy(data, d => d.Campaign).map(d => ({\n      value: d.Campaign,\n      label: d.Campaign\n    }));\n  }, [data]);\n","import { useMemo } from 'react';\n\nexport const useFilteredData = (dataSources, campaigns, data = []) =>\n  useMemo(\n    () =>\n      data.filter(d => {\n        const validDataSource =\n          !dataSources.length || dataSources.includes(d.Datasource);\n        const validCampaign =\n          !campaigns.length || campaigns.includes(d.Campaign);\n        return validDataSource && validCampaign;\n      }),\n    [dataSources, campaigns, data]\n  );\n","import { useRef, useState, useEffect, useMemo } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\n\n// source: https://wattenberger.com/blog/react-hooks\nconst combineChartDimensions = dimensions => {\n  let parsedDimensions = {\n    marginTop: 40,\n    marginRight: 75,\n    marginBottom: 70,\n    marginLeft: 75,\n    ...dimensions\n  };\n\n  return {\n    ...parsedDimensions,\n    boundedHeight: Math.max(\n      parsedDimensions.height -\n        parsedDimensions.marginTop -\n        parsedDimensions.marginBottom,\n      0\n    ),\n    boundedWidth: Math.max(\n      parsedDimensions.width -\n        parsedDimensions.marginLeft -\n        parsedDimensions.marginRight,\n      0\n    )\n  };\n};\n\nconst defaultSettings = {};\n\nexport const useChartDimensions = (passedSettings = defaultSettings) => {\n  const ref = useRef();\n\n  const dimensions = useMemo(() => combineChartDimensions(passedSettings), [\n    passedSettings\n  ]);\n\n  const [width, changeWidth] = useState(0);\n\n  const [height, changeHeight] = useState(0);\n\n  useEffect(() => {\n    const element = ref.current;\n\n    const resizeObserver = new ResizeObserver(entries => {\n      if (!Array.isArray(entries)) return;\n\n      if (!entries.length) return;\n\n      const entry = entries[0];\n\n      if (width !== entry.contentRect.width)\n        changeWidth(entry.contentRect.width);\n\n      if (height !== entry.contentRect.height)\n        changeHeight(entry.contentRect.height);\n    });\n\n    resizeObserver.observe(element);\n\n    return () => resizeObserver.unobserve(element);\n  }, [dimensions, height, width]);\n\n  const newSettings = useMemo(\n    () =>\n      combineChartDimensions({\n        ...dimensions,\n        width: dimensions.width || width,\n        height: dimensions.height || height\n      }),\n    [dimensions, width, height]\n  );\n\n  return [ref, newSettings];\n};\n","import * as d3 from 'd3';\n\nexport class D3Chart {\n  constructor(element) {\n    this.initAccessors();\n    this.initScales();\n    this.initGenerators();\n    this.initGroups(element);\n  }\n\n  initAccessors() {\n    this.yAccessorClicks = d => d.Clicks;\n    this.yAccessorImpressions = d => d.Impressions;\n    this.xAccessor = d => d.Date;\n  }\n\n  initScales() {\n    this.yScaleClicks = d3.scaleLinear();\n    this.yScaleImpressions = d3.scaleLinear();\n    this.xScale = d3.scaleTime();\n  }\n\n  initGenerators() {\n    const lineGeneratorClicks = d3\n      .line()\n      .defined(d => !isNaN(this.yAccessorClicks(d)))\n      .x(d => this.xScale(this.xAccessor(d)))\n      .y(d => this.yScaleClicks(this.yAccessorClicks(d)));\n\n    const lineGeneratorImpressions = d3\n      .line()\n      .defined(d => !isNaN(this.yAccessorImpressions(d)))\n      .x(d => this.xScale(this.xAccessor(d)))\n      .y(d => this.yScaleImpressions(this.yAccessorImpressions(d)));\n\n    this.pathData = [\n      {\n        title: 'Clicks',\n        lineGenerator: lineGeneratorClicks,\n        color: '#af9358'\n      },\n      {\n        title: 'Impressions',\n        lineGenerator: lineGeneratorImpressions,\n        color: '#4C63B6'\n      }\n    ];\n\n    this.yAxisGeneratorClicks = d3.axisLeft().scale(this.yScaleClicks);\n    this.yAxisGeneratorImpressions = d3\n      .axisRight()\n      .scale(this.yScaleImpressions);\n    this.xAxisGenerator = d3.axisBottom().scale(this.xScale);\n  }\n\n  initGroups(element) {\n    this.svg = d3.select(element).append('svg');\n    this.bounds = this.svg.append('g');\n    this.yAxisGroupClicks = this.bounds.append('g');\n    this.yAxisGroupImpressions = this.bounds.append('g');\n    this.xAxisGroup = this.bounds.append('g');\n    this.chartGroup = this.bounds.append('g');\n    this.legendGroup = this.bounds.append('g');\n  }\n\n  update(dimensions, data = []) {\n    this.updateBounds(dimensions);\n    this.updateScales(dimensions, data);\n    this.updateAxis(dimensions);\n    this.updateLegends(dimensions);\n    this.updatePaths(dimensions, data);\n  }\n\n  updateBounds(dimensions) {\n    this.svg\n      .attr('width', dimensions.width)\n      .attr('height', Math.max(0, dimensions.height - 10))\n      .style('position', 'absolute');\n\n    this.bounds.style(\n      'transform',\n      `translate(${dimensions.marginLeft}px, ${dimensions.marginTop}px)`\n    );\n  }\n\n  updateScales(dimensions, data) {\n    this.yScaleClicks\n      .domain(d3.extent(data, this.yAccessorClicks))\n      .range([dimensions.boundedHeight, 0])\n      .nice();\n    this.yScaleImpressions\n      .domain(d3.extent(data, this.yAccessorImpressions))\n      .range([dimensions.boundedHeight, 0])\n      .nice();\n    this.xScale\n      .domain(d3.extent(data, this.xAccessor))\n      .range([0, dimensions.boundedWidth])\n      .nice();\n  }\n\n  updateAxis(dimensions) {\n    this.yAxisGroupClicks.transition(1000).call(this.yAxisGeneratorClicks);\n    this.yAxisGroupImpressions\n      .transition(1000)\n      .call(this.yAxisGeneratorImpressions)\n      .style('transform', `translateX(${dimensions.boundedWidth}px)`);\n    this.xAxisGroup\n      .transition(1000)\n      .call(this.xAxisGenerator)\n      .style('transform', `translateY(${dimensions.boundedHeight}px)`);\n  }\n\n  updateLegends(dimensions) {\n    const legends = this.legendGroup.selectAll('svg').data(this.pathData);\n\n    legends.exit().remove();\n\n    legends\n      .attr('x', (d, i) => i * 200)\n      .attr('y', dimensions.boundedHeight + 25);\n\n    const svg = legends\n      .enter()\n      .append('svg')\n      .attr('viewBox', '0 0 200 50')\n      .attr('x', (d, i) => i * 200)\n      .attr('y', dimensions.boundedHeight + 25)\n      .attr('width', 200)\n      .attr('height', 60);\n    svg\n      .append('rect')\n      .attr('x', 0)\n      .attr('y', 5)\n      .attr('width', 30)\n      .attr('height', 5)\n      .attr('fill', d => d.color);\n    svg\n      .append('text')\n      .attr('x', 40)\n      .attr('y', 12)\n      .attr('fill', '#777')\n      .style('font-size', '1.8rem')\n      .text(d => d.title);\n  }\n\n  updatePaths(dimensions, data) {\n    const path = this.chartGroup.selectAll('path').data(this.pathData);\n    //EXIT\n    path.exit().remove();\n    //UPDATE\n    path.transition(1000).attr('d', d => d.lineGenerator(data));\n    //ENTER\n    path\n      .enter()\n      .append('path')\n      .attr('d', d => d.lineGenerator(data))\n      .attr('fill', 'none')\n      .attr('stroke', d => d.color)\n      .attr('stroke-width', 2);\n  }\n}\n","import React, { useRef, useEffect } from 'react';\nimport { useChartDimensions } from '../hooks/useChartDimensions';\nimport { D3Chart } from './D3Chart';\nimport './Chart.scss';\n\nexport const Chart = ({ data }) => {\n  const d3ChartRef = useRef();\n  const [ref, dimensions] = useChartDimensions();\n\n  useEffect(() => {\n    d3ChartRef.current = new D3Chart(ref.current);\n  }, [ref]);\n\n  useEffect(() => {\n    d3ChartRef.current.update(dimensions, data);\n  }, [dimensions, data]);\n\n  return <div ref={ref} className=\"chart\"></div>;\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Sidebar } from './components/Sidebar';\nimport { Loader } from './components/Loader';\nimport { useData } from './hooks/useData';\nimport { useDataSourceOptions } from './hooks/useDataSourceOptions';\nimport { useCampaignOptions } from './hooks/useCampaignOptions';\nimport { useFilteredData } from './hooks/useFilteredData';\nimport { Chart } from './components/Chart';\n\nfunction App() {\n  const { data, isLoading, error } = useData();\n  const [state, setState] = useState({\n    dataSources: [],\n    campaigns: []\n  });\n  const { dataSources, campaigns } = state;\n  const dataSourceOptions = useDataSourceOptions(data);\n  const campaignOptions = useCampaignOptions(data);\n  const filteredValues = useFilteredData(dataSources, campaigns, data);\n  const handleOnApply = model => {\n    setState(model);\n  };\n\n  if (error) {\n    return <div>Unexpected error ocurred. Please refresh your page.</div>;\n  }\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <div className=\"app\">\n      <Sidebar\n        model={state}\n        dataSourceOptions={dataSourceOptions}\n        campaignOptions={campaignOptions}\n        onApply={handleOnApply}\n      />\n      <Chart data={filteredValues} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}